SET MARKUP HTML ON ENTMAP ON SPOOL ON PREFORMAT OFF
SPOOL C:\DATABASE.HTML
PROMPT
PROMPT ==> FUNÇÃO: FAZ UMA ANÁLISE DA SITUAÇÃO ATUAL DA BASE DE DADOS
PROMPT
PROMPT
PROMPT
PROMPT ==> INFORMAÇÕES SOBRE A VERSÃO DO BANCO DE DADOS
PROMPT
SELECT
	BANNER
FROM
	V$VERSION
/

PROMPT
PROMPT ==> INFORMAÇÕES BÁSICAS DO BANCO DE DADOS
PROMPT
SELECT
	NAME,
	CREATED,
	LOG_MODE,
	OPEN_MODE
FROM
	V$DATABASE
/

PROMPT
PROMPT ==> INFORMAÇÕES BÁSICAS SOBRE O LICENCIAMENTO
PROMPT
SELECT
	*
FROM
	V$LICENSE
/

PROMPT
PROMPT ==> OPÇÕES INSTALADAS NO BANCO DE DADOS
PROMPT
SELECT
	*
FROM
	V$OPTION
/
PROMPT
PROMPT ==> INFORMAÇÕES SOBRE SESSÕES NA BASE DE DADOS NO PERÍODO
PROMPT
SELECT
	DISTINCT(TRUNC(DATA)) "DIA",
	ROUND(COUNT(*)/24,2) "MÉDIA DE SESSÕES"
FROM
	SESSIONS
WHERE
	TRUNC(DATA) >= SYSDATE - 30
GROUP BY TRUNC(DATA)
/
PROMPT
PROMPT ==> INFORMAÇÕES SOBRE ENCERRAMENTO DE SESSÕES INATIVAS
PROMPT
SELECT
   DISTINCT(TRUNC(DATA)) "DIA",
   COUNT(*) "TOTAL DE SESSÕES ENCERRADAS"
FROM
   DBADMIN.LOGKILL
WHERE
   TRUNC(DATA) >= SYSDATE - 30
GROUP BY TRUNC(DATA)
/
PROMPT
PROMPT ==> INFORMAÇÕES SOBRE A ALOCAÇÃO DE MEMÓRIA (SGA)
SELECT
	*
FROM
	V$SGA
ORDER BY
	VALUE DESC
/
PROMPT

PROMPT ==> DETALHES DA MEMÓRIA ALOCADA (SGA)
PROMPT
SELECT
	POOL,
	NAME,
	BYTES,
	ROUND(BYTES/1024/1024,2) "MEGA BYTES"
FROM
	V$SGASTAT
ORDER BY
	BYTES DESC
/
PROMPT
PROMPT
PROMPT ==>> ADVICES DA INSTANCE
PROMPT
PROMPT
PROMPT ==> VERIFICA O EFEITO DE UM CACHE DE DADOS MAIOR E MENOR
PROMPT ==> PARÂMETRO DB_CACHE_SIZE DO INIT.ORA
PROMPT
COLUMN BUFFERS_FOR_ESTIMATE 		FORMAT 999,999,999 	HEADING 'BUFFERS'
COLUMN ESTD_PHYSICAL_READ_FACTOR	FORMAT 999.90		HEADING 'ESTD PHYS | READ FACT'
COLUMN ESTD_PSYSICAL_READS		FORMAT 999,999,999	HEADING	'ESTD PHYS | READS'
SELECT
	SIZE_FOR_ESTIMATE,
	BUFFERS_FOR_ESTIMATE,
	ESTD_PHYSICAL_READ_FACTOR,
	ESTD_PHYSICAL_READS
FROM
	V$DB_CACHE_ADVICE
WHERE
	NAME = 'DEFAULT'
	AND BLOCK_SIZE = 	(SELECT
					VALUE
				FROM
					V$PARAMETER
				WHERE
					NAME = 'db_block_size')
	AND ADVICE_STATUS = 'ON'
/
PROMPT
PROMPT ==> VERIFICA O EFEITO DE UM MTTR_TARGET MAIOR E MENOR
PROMPT ==> PARÂMETRO FAST_START_MTTR_TARGET DO INIT.ORA
PROMPT
SELECT
	*
FROM
	V$MTTR_TARGET_ADVICE
/
PROMPT
PROMPT
PROMPT ==> VERIFICA O EFEITO DE UMA PGA_AGGREGATE_TARGET MAIOR E MENOR
PROMPT ==> PARÂMETRO PGA_AGGREGATE_TARGET DO INIT.ORA
PROMPT
SELECT
	*
FROM
	V$PGA_TARGET_ADVICE
/

PROMPT
PROMPT ==> VERIFICA O EFEITO DE UMA SHARED POOL MAIOR E MENOR
PROMPT ==> PARÂMETRO SHARED_POOL_SIZE DO INIT.ORA
PROMPT
SELECT
	*
FROM
	V$SHARED_POOL_ADVICE
/
PROMPT
PROMPT
PROMPT ==>> TAXAS DE ACERTO (HITRATIO)
PROMPT
PROMPT
PROMPT ==> DETERMINA A RAZÃO DE ACERTO PARA DADOS
PROMPT ==> CASO O HIT RATIO NÃO SE APROXIME DE 100, UMA ALTERNATIVA É AUMENTAR O DB_CACHE_SIZE
col phys     format 999,999,999 heading 'Physical Reads'
col gets     format 999,999,999 heading 'Db Block Gets'
col con_gets format 999,999,999 heading 'Consistent Gets'
col hitratio format 999.99 	heading ' Hit Ratio '
select
	sum(decode(name,'physical reads',value,0)) phys,
        sum(decode(name,'db block gets',value,0)) gets,
        sum(decode(name,'consistent gets',value,0)) con_gets,
        (1 - (sum(decode(name,'physical reads',value,0))/
             (sum(decode(name,'db block gets',value,0)) +
              sum(decode(name,'consistent gets',value,0))))) * 100 hitratio
from
   v$sysstat
/
PROMPT
PROMPT ==> VERIFICA A RAZÃO DE ACERTO DO DICIONÁRIO
PROMPT ==> SE A RAZÃO DE ACERTO FICAR ABAIXO DE 95% SIGNIFICA QUE O SHARED_POOL_SIZE PRECISA SER AUMENTADO
PROMPT
SELECT
	SUM(GETS),
	SUM(GETMISSES),
	(1-(SUM(GETMISSES) / (SUM(GETS) + SUM(GETMISSES)))) * 100 HITRATE
FROM
	V$ROWCACHE
/
PROMPT
PROMPT ==> OBJETOS QUE PODEM SER FIXADOS NA MEMÓRIA VISANDO OTIMIZAÇÃO
PROMPT ==> APENAS OS QUE POSSUEM MAIS DE 100KB
COL NAME FORMAT A30
SELECT
	NAME,
	OWNER,
	SHARABLE_MEM,
	ROUND(SHARABLE_MEM/1024,2) AS "SHARABLE MEMORY - KB"
FROM
	V$DB_OBJECT_CACHE
WHERE
	SHARABLE_MEM > 100000
	AND TYPE IN ('PACKAGE','PACKAGE BODY','FUNCTION','PROCEDURE')
	AND KEPT = 'NO'
	AND OWNER NOT IN('SYS','SYSTEM')
ORDER BY
	SHARABLE_MEM DESC
/
PROMPT
PROMPT ==> INFORMAÇÕES SOBRE OS DATAFILES
PROMPT
SELECT
	FILE_NAME       "ARQUIVO",
	FILE_ID 	"IDENTIFICADOR",
	TABLESPACE_NAME "TABLESPACE",
	BYTES/1024/1024 "MEGA BYTES",
	BLOCKS 		"BLOCOS",
	AUTOEXTENSIBLE 	"AUTO EXTENSÍVEL"
FROM
	DBA_DATA_FILES
ORDER BY
	BYTES DESC
/
PROMPT
PROMPT ==> INFORMAÇÕES SOBRE LEITURA E GRAVAÇÃO SOBRE OS DATAFILES (I/O)
PROMPT
COL PHYRDS  FORMAT 999,999,999
COL PHYWRTS FORMAT 999,999,999
COL READTIM FORMAT 999,999,999
COL WRITETIM FORMAT 999,999,999
COL NAME FORMAT A50
SELECT
	D.TABLESPACE_NAME 	"TABLESPACE",
	NAME		   	"ARQUIVO",
	PHYRDS			"LEITURAS FÍSICAS",
	PHYWRTS			"GRAVAÇÕES FÍSICAS",
	READTIM			"TEMPO EM LEITURAS",
	WRITETIM		"TEMPO EM GRAVAÇÕES"
FROM
	V$FILESTAT A,
	V$DBFILE B,
	DBA_DATA_FILES D
WHERE
	A.FILE# 	= B.FILE#
	AND D.FILE_NAME = B.NAME
ORDER  BY
	READTIM DESC
/
PROMPT
PROMPT
PROMPT ==> ESTIMATIVA DE CRESCIMENTO NO PERÍODO
PROMPT
COL TABLESPACE FORMAT A15
SELECT
	A.FILE_NAME 		"ARQUIVO",
	A.FILE_ID   		"IDENTIFICADOR",
	A.TABLESPACE_NAME	"TABLESPACE",
	B.SIZE_MB		"TAMANHO ANTERIOR",
	A.BYTES/1024/1024 	"TAMANHO ATUAL",
	(A.BYTES/1024/1024)-B.SIZE_MB "CRESCIMENTO",
	ROUND((((A.BYTES/1024/1024)-B.SIZE_MB)*100)/(A.BYTES/1024/1024),2)||' %' "PORCENTAGEM"
FROM
	DBA_DATA_FILES 		A,
	DBADMIN.DATAFILES 	B
WHERE
	A.TABLESPACE_NAME = B.TABLESPACE
	AND TRUNC(B.DATA) = '14/03/2004'
ORDER BY
	A.BYTES DESC
/
PROMPT
PROMPT ==> INFORMAÇÕES SOBRE OS REDO LOG FILES
COL MEMBRO FORMAT A50
SELECT
	A.GROUP# "GRUPO",
	B.MEMBER "MEMBRO",
	A.BYTES/1024/1024 "MEGA BYTES"
FROM
	V$LOG A, V$LOGFILE B
WHERE
	A.GROUP# = B.GROUP#
/
PROMPT
PROMPT ==> ARCHIVES GERADOS PELA INSTANCE NO PERÍODO
COL NAME FORMAT A50
PROMPT
SELECT
	NAME 		"NOME",
	FIRST_TIME 	"HORÁRIO",
	SEQUENCE# 	"SEQÜÊNCIA",
	SIZE_MB 	"MEGA BYTES"
FROM
	DBADMIN.ARCHIVED_LOG
WHERE
	FIRST_TIME BETWEEN SYSDATE - 30 AND SYSDATE
/
PROMPT
PROMPT ==> RESULTADOS RELACIONADOS AOS ARCHIVES
PROMPT ==> A COLUNA MÉDIA DIÁRIA INDICA O QUANTO É NECESSÁRIO
PROMPT ==> ESTIMAR EM DISCO PARA A ALOCAÇÃO DIÁRIA DE ARCHIVES
PROMPT ==> EM UM DIA DE MOVIMENTO COMUM
PROMPT
SELECT
   COUNT(*) 		"QUANTIDADE",
   (COUNT(*)/30)*100 	"MÉDIA DIÁRIA MEGA BYTES",
   SUM(SIZE_MB) 	"TOTAL EM MEGA BYTES"
FROM
   DBADMIN.ARCHIVED_LOG
WHERE
   FIRST_TIME BETWEEN SYSDATE - 30 AND SYSDATE
/
PROMPT
PROMPT ==> HISTÓRICO DE ESPAÇO LIVRE EM DISCO NA UNIDADE DO DB
PROMPT
SELECT
	DATA,
	ROUND(ESPACO_DISPONIVEL/1024/1024/1024,2) "GIGA BYTES"
FROM
	MONITORAMENTO_DISCO
ORDER BY
	DATA DESC
/
PROMPT

SPOOL OFF
SET MARKUP HTML OFF ENTMAP OFF SPOOL OFF PREFORMAT ON